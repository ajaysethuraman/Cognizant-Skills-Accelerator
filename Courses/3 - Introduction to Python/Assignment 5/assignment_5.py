# -*- coding: utf-8 -*-
"""Assignment 5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PKCTlymLVwLjLdXGWNsfUUQQOt_FYbzs

# **Assignment: About Parameters of Functions**
## By Ajay Sethuraman
## **Introduction**
Functions are essential in Python for writing reusable, efficient code. They allow us to organize our code into blocks that can be called as needed, making it easier to maintain and understand. This assignment covers various aspects of functions, including function parameters, default parameters, variable arguments, and recursion.

**Task 1 - Writing Functions**

Create a function greet_user. This function will accept a name as a parameter and print a personalized greeting.
"""

def greet_user(name):
    """Greets the user by their name."""
    print(f"Hello, {name}! Welcome aboard.")

# Create another function `add_numbers`
def add_numbers(num1, num2):
    """Adds two numbers and returns the result."""
    return num1 + num2

# Example usage
name = "Ajay"
greet_user(name)
sum_result = add_numbers(5, 10)
print(f"The sum of 5 and 10 is {sum_result}.")

"""**Task 2 - Using Default Parameters**

Create a function describe_pet. This function will accept two parameters: pet_name (string) and animal_type (string, with a default value of "dog").
"""

def describe_pet(pet_name, animal_type="dog"):
    """Describes the pet using the given parameters."""
    print(f"I have a {animal_type} named {pet_name}.")

# Example usage
describe_pet("Bucky")  # Uses default animal_type
describe_pet("Garfield", "cat")  # Provides custom animal_type

"""**Task 3 - Functions with Variable Arguments**

Write a function make_sandwich. This function will accept a variable number of arguments for sandwich ingredients and print them as a list.
"""

def make_sandwich(*ingredients):
    """Makes a sandwich with the given ingredients."""
    print("Making a sandwich with the following ingredients:")
    for ingredient in ingredients:
        print(f"- {ingredient}")

# Example usage
make_sandwich("Lettuce", "Tomato", "Cheese")

"""**Task 4 - Understanding Recursion**

Write a recursive function factorial:
"""

def factorial(n):
    """Calculates the factorial of a number using recursion."""
    if n == 0:  # Base case
        return 1
    else:
        return n * factorial(n - 1)

# Write another recursive function `fibonacci`
def fibonacci(n):
    """Calculates the nth number in the Fibonacci sequence using recursion."""
    if n <= 1:
        return n
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)

# Example usage
factorial_result = factorial(5)
fibonacci_result = fibonacci(6)
print(f"Factorial of 5 is {factorial_result}. The 6th Fibonacci number is {fibonacci_result}.")

"""## **Conclusion**
This assignment explores the fundamentals of Python functions, including the use of parameters, default parameters, variable arguments, and recursion. These concepts are crucial for building efficient and reusable code. By mastering them, we can enhance our ability to solve problems effectively and elegantly in Python.
"""

