# -*- coding: utf-8 -*-
"""Project 4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Gyy8sZMVbTfh2U1HpDTy8fv6ZbTFLc6t

# **Inventory Management System**
## by Ajay Sethuraman
## **Introduction**
Efficient inventory management is crucial for tracking products, stock levels, and prices. In this project, we implement a simple inventory system using Python dictionaries, lists, and tuples. The system supports adding, removing, updating items, and calculating the total inventory value.
"""

# Initialize an empty inventory dictionary
inventory = {
    "apple": (10, 2.5),
    "banana": (20, 1.2)
}

def add_item(name, quantity, price):
    """Adds a new item to the inventory."""
    if name in inventory:
        print(f"{name} already exists. Use update_item() to modify it.")
    else:
        inventory[name] = (quantity, price)
        print(f"Added {name} to the inventory.")

def remove_item(name):
    """Removes an item from the inventory."""
    if name in inventory:
        del inventory[name]
        print(f"Removed {name} from the inventory.")
    else:
        print(f"{name} does not exist in the inventory.")

def update_item(name, quantity=None, price=None):
    """Updates the quantity or price of an existing item."""
    if name in inventory:
        current_quantity, current_price = inventory[name]
        inventory[name] = (quantity if quantity is not None else current_quantity,
                           price if price is not None else current_price)
        print(f"Updated {name}: Quantity={inventory[name][0]}, Price=${inventory[name][1]}")
    else:
        print(f"{name} does not exist in the inventory.")

def display_inventory():
    """Displays all inventory items in a user-friendly format."""
    print("\nCurrent Inventory:")
    for item, (quantity, price) in inventory.items():
        print(f"Item: {item}, Quantity: {quantity}, Price: ${price}")

def calculate_total_value():
    """Calculates and returns the total value of inventory."""
    total_value = sum(quantity * price for quantity, price in inventory.values())
    print(f"\nTotal value of inventory: ${total_value:.2f}")

"""## **Usage**"""

print("Welcome to the Inventory Manager!")
display_inventory()

# Adding a new item
add_item("mango", 15, 3.0)
display_inventory()

# Updating an existing item
update_item("banana", quantity=25)

# Removing an item
remove_item("apple")
display_inventory()

# Calculating total inventory value
calculate_total_value()

"""## **Conclusion**
This project demonstrates how to manage an inventory system effectively using Python data structures. By leveraging dictionaries and tuples, we can store, modify, and retrieve product information efficiently. Enhancing this system with a user-friendly interface or a database connection could further improve its usability.
"""

