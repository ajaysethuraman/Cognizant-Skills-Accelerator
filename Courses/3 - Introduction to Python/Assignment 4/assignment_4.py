# -*- coding: utf-8 -*-
"""Assignment 4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rQ2XkyLef8C2jB25TpdaYJnbPaTaLt8c

# **Hands-on Python Data Structures**
## By Ajay Sethuraman
## **Introduction**
Python offers powerful data structures like lists, dictionaries, and tuples, which are essential for organizing and manipulating data efficiently. This assignment explores these data structures through practical tasks.

**Task 1: Working with Lists**
"""

# Creating a list of favorite fruits
fruits = ['apple', 'banana', 'cherry', 'date', 'elderberry']

print("Original list:", fruits)

# Appending a new fruit
fruits.append('fig')
print("After adding a fruit:", fruits)

# Removing a fruit
fruits.remove('apple')
print("After removing a fruit:", fruits)

# Printing the list in reverse order
print("Reversed list:", fruits[::-1])

"""**Task 2: Exploring Dictionaries**"""

# Creating a dictionary with personal details
person = {
    "name": "Alice",
    "age": 25,
    "city": "New York"
}

# Adding a new key-value pair
person["favorite color"] = "Blue"

# Updating the city
person["city"] = "Los Angeles"

# Printing all keys and values
print("Keys:", ", ".join(person.keys()))
print("Values:", ", ".join(str(value) for value in person.values()))

"""**Task 3: Using Tuples**"""

# Creating a tuple of favorite items
favorite_things = ("Inception", "Bohemian Rhapsody", "1984")

# Trying to modify a tuple (this will cause an error)
try:
    favorite_things[0] = "The Matrix"
except TypeError:
    print("Oops! Tuples cannot be changed.")

# Printing the length of the tuple
print("Length of tuple:", len(favorite_things))

"""## **Conclusion**
This assignment demonstrates the versatility of Pythonâ€™s data structures. Lists allow dynamic modifications, dictionaries enable structured data storage, and tuples ensure immutability. Mastering these structures is essential for efficient Python programming.
"""

